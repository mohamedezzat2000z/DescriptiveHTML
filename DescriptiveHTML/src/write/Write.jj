PARSER_BEGIN(Write)
package write;

import java.io.StringReader;

public class Write {
  
    public static void main(String[] args) throws Exception {
      StringReader in=new StringReader("");
      Write write=new Write(in);
      write.create();
    }
    
}

PARSER_END(Write)


SKIP:  { " " | "\t" | "\n" | "\r"}
TOKEN: { "/" | ":" | "“" |"." }
TOKEN: { "PARAGRAPH"| "IMAGE" | "WITH" | "SOURCE" | "ADD" |	"HEADING" |  "LINK" | "TEXT" | "COLOR" |  "FONT"| "http" | "com" |"AND" | "WITH LINK"}
TOKEN [IGNORE_CASE] : { <word: (["a"-"z"])+> }
TOKEN: { <NUM: (["0"-"9"])+> }


void create():
{}
{
  "ADD" element()
}

void element():
{}
{
	img() | header() | para() | url()
}

void img():
{}
{
  "IMAGE" "WITH" "SOURCE"  quote() sentence() quote()
}

void header():
{}
{
  "HEADING" decorated_text()
}

void para():
{}
{
  "PARAGRAPH" decorated_text()
}

void url():
{}
{
  "LINK" decorated_url()
}

void  quote():
{}
{
 	"“"
}

void sentence():
{}
{
  (apha())*
}

void  apha():
{}
{
 	"/" | ":" |"."| <NUM> | <word> 
}

void decorated_text():
{}
{
	  "WITH" (text() |  color() |  font() )
}

void text():
{}
{
  "TEXT" quote() sentence() quote()
}

void color():
{}
{
   "COLOR" quote() sentence() quote()
}

void font():
{}
{
   "FONT" quote() sentence() quote()
}

void decorated_url():
{}
{
  "TEXT" <word> "AND" "WITH LINK" "http" ":" "/" "/" <word> "." "com" (decorated_text())*
}
